<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.config.dao.self.ConfigSelfDao">

	<!--通过字典类型名称查询对象-->
	<select id="getByTypeName"  parameterType="com.bootdo.config.domain.DictionaryTypeDO"  resultType="com.bootdo.config.domain.DictionaryTypeDO">
		select `type_id`,`type_value`,`type_name`,`type_desc`,`can_edit`,`create_time`,`update_time`,`create_by_id`,`update_by_id`,`create_by`,`update_by` from pz_dictionary_type where type_name = #{typeName}
	</select>

	<!--通过字典名称查询字典对象-->
	<select id="getByDictName"  parameterType="com.bootdo.config.domain.DictionaryDO"  resultType="com.bootdo.config.domain.DictionaryDO">
		select `dict_id`,`dict_name`,`dict_value`,`dict_desc`,`dict_sort`,`del_flag`,`remarks`,`parent_id`,`type_id`,`create_time`,`update_time`,`create_by_id`,`update_by_id`,`create_by`,`update_by` from pz_dictionary where dict_name = #{dictName}
	</select>

	<!--查询字典类型下拉选项-->
	<select id="listType" resultType="com.bootdo.config.domain.DictionaryTypeDO">
		select `type_id`,`type_value`,`type_name`,`type_desc`,`can_edit`,`create_time`,`update_time`,`create_by_id`,`update_by_id`,`create_by`,`update_by` from pz_dictionary_type
		<where>
			<if test="typeId != null and typeId != ''"> and type_id = #{typeId} </if>
			<if test="typeValue != null and typeValue != ''"> and type_value = #{typeValue} </if>
			<if test="typeName != null and typeName != ''"> and type_name = #{typeName} </if>
			<if test="typeDesc != null and typeDesc != ''"> and type_desc = #{typeDesc} </if>
			<if test="canEdit != null and canEdit != ''"> and can_edit = #{canEdit} </if>
			<if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
			<if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
			<if test="createById != null and createById != ''"> and create_by_id = #{createById} </if>
			<if test="updateById != null and updateById != ''"> and update_by_id = #{updateById} </if>
			<if test="createBy != null and createBy != ''"> and create_by = #{createBy} </if>
			<if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy} </if>
		</where>
	</select>

	<!--根据id删除字典类型，若该类型有数据，类型不能删除-->
	<delete id="removeById">
        delete from pz_dictionary_type where pz_dictionary_type.type_id = #{value} and pz_dictionary_type.type_id not in
       (select pz_dictionary.type_id from pz_dictionary where pz_dictionary.type_id = pz_dictionary_type.type_id)
	</delete>

	<!--批量删除字典类型，若该类型有数据，类型不能删除-->
	<delete id="batchRemove1">
		delete from pz_dictionary_type where pz_dictionary_type.type_id in
		<foreach item="typeId" collection="array" open="(" separator="," close=")">
			#{typeId}
		</foreach>
		and pz_dictionary_type.type_id not in
		(select pz_dictionary.type_id from pz_dictionary where pz_dictionary.type_id = pz_dictionary_type.type_id)
	</delete>

	<!--根据字典类型名称查询字典对象-->
	<select id="getByType" parameterType="string" resultType="com.bootdo.config.domain.DictionaryDO">
         select a.`dict_id`,a.`dict_name`,a.`dict_value`,a.`dict_desc`,a.`dict_sort`,a.`del_flag`,a.`remarks`,a.`parent_id`,a.`type_id`,a.`create_time`,a.`update_time`,a.`create_by_id`,a.`update_by_id`,a.`create_by`,a.`update_by`
         from pz_dictionary as a inner join pz_dictionary_type as b on a.type_id = b.type_id and b.type_name = #{value} order by a.dict_sort asc
	</select>

</mapper>